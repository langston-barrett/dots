# vim: ft=cfg
# Destination: $XDG_CONFIG_HOME/dunst/dunstrc
# Example: /usr/share/dunst/dunstrc
[global]
    font = Monoid 26

    # Allow a small subset of html markup: <b>, <i>, <s>, <u>:
    # <http://developer.gnome.org/pango/stable/PangoMarkupFormat.html>.
    allow_markup = yes

    # The format of the message.  Possible variables are:
    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %I  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    # Markup is allowed
    format = "<b>%s</b>\n%b"

    # Sort messages by urgency.
    sort = yes

    # Alignment of message text.
    # Possible values are "left", "center" and "right".
    alignment = left

    # Split notifications into multiple lines if they don't fit into
    # geometry.
    word_wrap = yes

    # Ignore newlines '\n' in notifications.
    ignore_newline = no

    # The geometry of the window:
    #   [{width}]x{height}[+/-{x}+/-{y}]
    # The geometry of the message window.
    # The height is measured in number of notifications everything else
    # in pixels.  If the width is omitted but the height is given
    # ("-geometry x2"), the message window expands over the whole screen
    # (dmenu-like).  If width is 0, the window expands to the longest
    # message displayed.  A positive x is measured from the left, a
    # negative from the right side of the screen.  Y is measured from
    # the top and down respectevly.
    # The width can be negative.  In this case the actual width is the
    # screen width minus the width defined in within the geometry option.
    geometry = "500-40+40"

    # The transparency of the window.  Range: [0; 100].
    transparency = 10

    # Don't remove messages, if the user is idle (no mouse or keyboard input)
    # for longer than idle_threshold seconds. Set to 0 to disable.
    idle_threshold = 60

    # Display notification on focused monitor.  Possible modes are:
    #   mouse: follow mouse pointer
    #   keyboard: follow window with keyboard focus
    #   none: don't follow anything
    # If this option is set the monitor option will be ignored.
    follow = mouse

    # Should a notification popped up from history be sticky or timeout
    # as if it would normally do.
    sticky_history = yes

    # Maximum amount of notifications kept in history
    history_length = 20

    # Display indicators for URLs (U) and actions (A).
    show_indicators = yes

    # The height of a single line.  If the height is smaller than the
    # font height, it will get raised to the font height.
    # This adds empty space above and under the text.
    line_height = 0

    # Draw a line of "separatpr_height" pixel height between two notifications.
    # Set to 0 to disable.
    separator_height = 2

    # Padding between text and separator.
    padding = 8

    # Horizontal padding.
    horizontal_padding = 8

    # Define a color for the separator.
    # possible values are:
    #  * auto: dunst tries to find a color fitting to the background;
    #  * foreground: use the same color as the foreground;
    #  * frame: use the same color as the frame;
    #  * anything else will be interpreted as a X color.
    separator_color = frame

    startup_notification = false

    # dmenu path:  dmenu = /usr/bin/dmenu -p dunst:

    # Browser for opening urls in context menu.
    browser = /usr/bin/firefox -new-tab

    # Align icons left/right/off
    icon_position = off

    # Paths to default icons.
    icon_folders = /usr/share/icons/gnome/16x16/status/:/usr/share/icons/gnome/16x16/devices/

[frame]
    width = 3
    color = "{{ colorscheme['text'] }}"

[shortcuts]

    # Shortcuts are specified as [modifier+][modifier+]...key
    # Available modifiers are "ctrl", "mod1" (the alt-key), "mod2",
    # "mod3" and "mod4" (windows-key).
    # Xev might be helpful to find names for keys.

    # Close notification.
    close = Escape

    # Close all notifications.
    close_all = ctrl+Escape

    # Redisplay last message(s).
    # On the US keyboard layout "grave" is normally above TAB and left
    # of "1".
    history = ctrl+shift+Escape

    # Context menu.
    context = ctrl+mod1+shift+Escape

[urgency_low]
    background = "{{ colorscheme['background'] }}"
    foreground = "{{ colorscheme['text'] }}"
    timeout = 10

[urgency_normal]
    background = "{{ colorscheme['background-alt'] }}"
    foreground = "{{ colorscheme['text'] }}"
    timeout = 10

[urgency_critical]
    background = "{{ colorscheme['urgent'] }}"
    foreground = "{{ colorscheme['background'] }}"
    timeout = 0


# Every section that isn't one of the above is interpreted as a rules to
# override settings for certain messages.
# Messages can be matched by "appname", "summary", "body", "icon", "category",
# "msg_urgency" and you can override the "timeout", "urgency", "foreground",
# "background", "new_icon" and "format".
# Shell-like globbing will get expanded.
#
# SCRIPTING
# You can specify a script that gets run when the rule matches by
# setting the "script" option.
# The script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: if you don't want a notification to be displayed, set the format
# to "".
# NOTE: It might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.

#[espeak]
#    summary = "*"
#    script = dunst_espeak.sh

#[script-test]
#    summary = "*script*"
#    script = dunst_test.sh

#[ignore]
#    # This notification will not be displayed
#    summary = "foobar"
#    format = ""

#[signed_on]
#    appname = Pidgin
#    summary = "*signed on*"
#    urgency = low
#
#[signed_off]
#    appname = Pidgin
#    summary = *signed off*
#    urgency = low
#
#[says]
#    appname = Pidgin
#    summary = *says*
#    urgency = critical
