;; -*- lexical-binding: t; -*-
;;; Python

;; import distutils.sysconfig as sysconfig
;; import os
;; std_lib = sysconfig.get_python_lib(standard_lib=True)
;; for top, dirs, files in os.walk(std_lib):
;;     for nm in files:
;;         if nm.startswith("_"):
;;             continue
;;         if nm == '__init__.py':
;;             print(top[len(std_lib)+1:].replace(os.sep, '.'))
;;         if nm != '__init__.py' and nm[-3:] == '.py':
;;             print(os.path.join(top, nm)[len(std_lib)+1:-3].replace(os.sep, '.'))
(defconst
  python-stdlib-modules
  '("antigravity"
    "site"
    "tarfile"
    "sunau"
    "shutil"
    "bdb"
    "textwrap"
    "bz2"
    "stringprep"
    "calendar"
    "pty"
    "queue"
    "bisect"
    "fileinput"
    "ssl"
    "shlex"
    "plistlib"
    "imaplib"
    "nntplib"
    "pstats"
    "pickletools"
    "socketserver"
    "hmac"
    "lzma"
    "modulefinder"
    "genericpath"
    "secrets"
    "compileall"
    "asyncore"
    "configparser"
    "numbers"
    "gettext"
    "quopri"
    "typing"
    "doctest"
    "struct"
    "dis"
    "cmd"
    "pipes"
    "token"
    "traceback"
    "sched"
    "datetime"
    "decimal"
    "filecmp"
    "nturl2path"
    "uu"
    "zipimport"
    "sysconfig"
    "asynchat"
    "selectors"
    "re"
    "stat"
    "codeop"
    "colorsys"
    "profile"
    "os"
    "threading"
    "getpass"
    "telnetlib"
    "this"
    "contextvars"
    "tty"
    "random"
    "cProfile"
    "base64"
    "runpy"
    "webbrowser"
    "sre_constants"
    "formatter"
    "optparse"
    "ast"
    "tabnanny"
    "mailcap"
    "difflib"
    "aifc"
    "ftplib"
    "timeit"
    "turtle"
    "fnmatch"
    "zipfile"
    "io"
    "symtable"
    "ntpath"
    "pdb"
    "linecache"
    "sre_parse"
    "locale"
    "dummy_threading"
    "fractions"
    "gzip"
    "smtplib"
    "codecs"
    "platform"
    "getopt"
    "operator"
    "statistics"
    "wave"
    "smtpd"
    "zipapp"
    "contextlib"
    "copy"
    "sndhdr"
    "poplib"
    "cgitb"
    "enum"
    "sre_compile"
    "imghdr"
    "socket"
    "rlcompleter"
    "netrc"
    "functools"
    "copyreg"
    "warnings"
    "argparse"
    "uuid"
    "ipaddress"
    "posixpath"
    "reprlib"
    "trace"
    "cgi"
    "code"
    "pprint"
    "pathlib"
    "imp"
    "pydoc"
    "string"
    "crypt"
    "types"
    "shelve"
    "signal"
    "hashlib"
    "inspect"
    "opcode"
    "tracemalloc"
    "heapq"
    "symbol"
    "tokenize"
    "pyclbr"
    "keyword"
    "chunk"
    "pickle"
    "mailbox"
    "abc"
    "xdrlib"
    "dataclasses"
    "csv"
    "subprocess"
    "weakref"
    "pkgutil"
    "glob"
    "py_compile"
    "tempfile"
    "binhex"
    "mimetypes"
    "wsgiref.validate"
    "wsgiref.handlers"
    "wsgiref.util"
    "wsgiref.simple_server"
    "wsgiref.headers"
    "test.regrtest"
    "test.test_support"
    "test.libregrtest.utils"
    "test.libregrtest.win_utils"
    "test.libregrtest.main"
    "test.libregrtest.setup"
    "test.libregrtest.runtest"
    "test.libregrtest.save_env"
    "test.libregrtest.refleak"
    "test.libregrtest.cmdline"
    "test.libregrtest.runtest_mp"
    "test.libregrtest.pgo"
    "test.support.script_helper"
    "test.support.testresult"
    "ctypes.wintypes"
    "ctypes.util"
    "ctypes.test.test_simplesubclasses"
    "ctypes.test.test_values"
    "ctypes.test.test_functions"
    "ctypes.test.test_sizes"
    "ctypes.test.test_as_parameter"
    "ctypes.test.test_pickling"
    "ctypes.test.test_returnfuncptrs"
    "ctypes.test.test_incomplete"
    "ctypes.test.test_prototypes"
    "ctypes.test.test_loading"
    "ctypes.test.test_unaligned_structures"
    "ctypes.test.test_cfuncs"
    "ctypes.test.test_wintypes"
    "ctypes.test.test_win32"
    "ctypes.test.test_libc"
    "ctypes.test.test_byteswap"
    "ctypes.test.test_pointers"
    "ctypes.test.test_objects"
    "ctypes.test.test_structures"
    "ctypes.test.test_arrays"
    "ctypes.test.test_varsize_struct"
    "ctypes.test.test_bytes"
    "ctypes.test.test_delattr"
    "ctypes.test.test_array_in_pointer"
    "ctypes.test.test_cast"
    "ctypes.test.test_pep3118"
    "ctypes.test.test_unicode"
    "ctypes.test.test_buffers"
    "ctypes.test.test_strings"
    "ctypes.test.test_struct_fields"
    "ctypes.test.test_anon"
    "ctypes.test.test_random_things"
    "ctypes.test.test_init"
    "ctypes.test.test_bitfields"
    "ctypes.test.test_find"
    "ctypes.test.test_checkretval"
    "ctypes.test.test_internals"
    "ctypes.test.test_callbacks"
    "ctypes.test.test_repr"
    "ctypes.test.test_keeprefs"
    "ctypes.test.test_slicing"
    "ctypes.test.test_frombuffer"
    "ctypes.test.test_numbers"
    "ctypes.test.test_funcptr"
    "ctypes.test.test_errno"
    "ctypes.test.test_python_api"
    "ctypes.test.test_memfunctions"
    "ctypes.test.test_stringptr"
    "ctypes.test.test_parameters"
    "ctypes.test.test_refcounts"
    "ctypes.test.test_macholib"
    "ctypes.macholib.dylib"
    "ctypes.macholib.dyld"
    "ctypes.macholib.framework"
    "unittest.case"
    "unittest.main"
    "unittest.loader"
    "unittest.result"
    "unittest.suite"
    "unittest.mock"
    "unittest.signals"
    "unittest.runner"
    "unittest.util"
    "unittest.async_case"
    "unittest.test.test_case"
    "unittest.test.test_result"
    "unittest.test.test_discovery"
    "unittest.test.test_async_case"
    "unittest.test.test_loader"
    "unittest.test.test_suite"
    "unittest.test.test_program"
    "unittest.test.test_setups"
    "unittest.test.support"
    "unittest.test.dummy"
    "unittest.test.test_runner"
    "unittest.test.test_assertions"
    "unittest.test.test_break"
    "unittest.test.test_functiontestcase"
    "unittest.test.test_skipping"
    "unittest.test.testmock.testpatch"
    "unittest.test.testmock.testasync"
    "unittest.test.testmock.testcallable"
    "unittest.test.testmock.testmagicmethods"
    "unittest.test.testmock.testsentinel"
    "unittest.test.testmock.support"
    "unittest.test.testmock.testmock"
    "unittest.test.testmock.testwith"
    "unittest.test.testmock.testhelpers"
    "unittest.test.testmock.testsealable"
    "xmlrpc.server"
    "xmlrpc.client"
    "collections.abc"
    "xml.parsers.expat"
    "xml.dom.expatbuilder"
    "xml.dom.minicompat"
    "xml.dom.xmlbuilder"
    "xml.dom.domreg"
    "xml.dom.minidom"
    "xml.dom.NodeFilter"
    "xml.dom.pulldom"
    "xml.sax.expatreader"
    "xml.sax.xmlreader"
    "xml.sax.handler"
    "xml.sax.saxutils"
    "xml.etree.ElementTree"
    "xml.etree.cElementTree"
    "xml.etree.ElementInclude"
    "xml.etree.ElementPath"
    "turtledemo.planet_and_moon"
    "turtledemo.lindenmayer"
    "turtledemo.chaos"
    "turtledemo.penrose"
    "turtledemo.colormixer"
    "turtledemo.forest"
    "turtledemo.minimal_hanoi"
    "turtledemo.peace"
    "turtledemo.tree"
    "turtledemo.bytedesign"
    "turtledemo.paint"
    "turtledemo.fractalcurves"
    "turtledemo.nim"
    "turtledemo.clock"
    "turtledemo.two_canvases"
    "turtledemo.round_dance"
    "turtledemo.yinyang"
    "turtledemo.rosette"
    "turtledemo.sorting_animate"
    "lib2to3.refactor"
    "lib2to3.pytree"
    "lib2to3.patcomp"
    "lib2to3.main"
    "lib2to3.fixer_base"
    "lib2to3.btm_matcher"
    "lib2to3.btm_utils"
    "lib2to3.fixer_util"
    "lib2to3.pygram"
    "lib2to3.tests.test_util"
    "lib2to3.tests.test_parser"
    "lib2to3.tests.test_refactor"
    "lib2to3.tests.test_main"
    "lib2to3.tests.pytree_idempotency"
    "lib2to3.tests.test_fixers"
    "lib2to3.tests.test_pytree"
    "lib2to3.tests.support"
    "lib2to3.tests.test_all_fixers"
    "lib2to3.tests.data.false_encoding"
    "lib2to3.tests.data.py3_test_grammar"
    "lib2to3.tests.data.py2_test_grammar"
    "lib2to3.tests.data.crlf"
    "lib2to3.tests.data.bom"
    "lib2to3.tests.data.different_encoding"
    "lib2to3.tests.data.infinite_recursion"
    "lib2to3.tests.data.fixers.parrot_example"
    "lib2to3.tests.data.fixers.bad_order"
    "lib2to3.tests.data.fixers.no_fixer_cls"
    "lib2to3.tests.data.fixers.myfixes.fix_preorder"
    "lib2to3.tests.data.fixers.myfixes.fix_explicit"
    "lib2to3.tests.data.fixers.myfixes.fix_parrot"
    "lib2to3.tests.data.fixers.myfixes.fix_last"
    "lib2to3.tests.data.fixers.myfixes.fix_first"
    "lib2to3.pgen2.token"
    "lib2to3.pgen2.conv"
    "lib2to3.pgen2.pgen"
    "lib2to3.pgen2.driver"
    "lib2to3.pgen2.parse"
    "lib2to3.pgen2.literals"
    "lib2to3.pgen2.tokenize"
    "lib2to3.pgen2.grammar"
    "lib2to3.fixes.fix_standarderror"
    "lib2to3.fixes.fix_nonzero"
    "lib2to3.fixes.fix_set_literal"
    "lib2to3.fixes.fix_input"
    "lib2to3.fixes.fix_sys_exc"
    "lib2to3.fixes.fix_isinstance"
    "lib2to3.fixes.fix_filter"
    "lib2to3.fixes.fix_execfile"
    "lib2to3.fixes.fix_print"
    "lib2to3.fixes.fix_itertools"
    "lib2to3.fixes.fix_future"
    "lib2to3.fixes.fix_has_key"
    "lib2to3.fixes.fix_methodattrs"
    "lib2to3.fixes.fix_apply"
    "lib2to3.fixes.fix_getcwdu"
    "lib2to3.fixes.fix_metaclass"
    "lib2to3.fixes.fix_except"
    "lib2to3.fixes.fix_repr"
    "lib2to3.fixes.fix_import"
    "lib2to3.fixes.fix_exec"
    "lib2to3.fixes.fix_imports2"
    "lib2to3.fixes.fix_asserts"
    "lib2to3.fixes.fix_ws_comma"
    "lib2to3.fixes.fix_imports"
    "lib2to3.fixes.fix_intern"
    "lib2to3.fixes.fix_numliterals"
    "lib2to3.fixes.fix_paren"
    "lib2to3.fixes.fix_raw_input"
    "lib2to3.fixes.fix_reduce"
    "lib2to3.fixes.fix_throw"
    "lib2to3.fixes.fix_zip"
    "lib2to3.fixes.fix_xrange"
    "lib2to3.fixes.fix_long"
    "lib2to3.fixes.fix_idioms"
    "lib2to3.fixes.fix_unicode"
    "lib2to3.fixes.fix_basestring"
    "lib2to3.fixes.fix_exitfunc"
    "lib2to3.fixes.fix_reload"
    "lib2to3.fixes.fix_dict"
    "lib2to3.fixes.fix_tuple_params"
    "lib2to3.fixes.fix_operator"
    "lib2to3.fixes.fix_funcattrs"
    "lib2to3.fixes.fix_buffer"
    "lib2to3.fixes.fix_raise"
    "lib2to3.fixes.fix_urllib"
    "lib2to3.fixes.fix_renames"
    "lib2to3.fixes.fix_itertools_imports"
    "lib2to3.fixes.fix_types"
    "lib2to3.fixes.fix_ne"
    "lib2to3.fixes.fix_next"
    "lib2to3.fixes.fix_map"
    "lib2to3.fixes.fix_xreadlines"
    "http.cookies"
    "http.cookiejar"
    "http.server"
    "http.client"
    "multiprocessing.managers"
    "multiprocessing.popen_fork"
    "multiprocessing.heap"
    "multiprocessing.spawn"
    "multiprocessing.sharedctypes"
    "multiprocessing.resource_tracker"
    "multiprocessing.pool"
    "multiprocessing.process"
    "multiprocessing.forkserver"
    "multiprocessing.reduction"
    "multiprocessing.queues"
    "multiprocessing.popen_spawn_posix"
    "multiprocessing.util"
    "multiprocessing.synchronize"
    "multiprocessing.popen_spawn_win32"
    "multiprocessing.connection"
    "multiprocessing.context"
    "multiprocessing.resource_sharer"
    "multiprocessing.popen_forkserver"
    "multiprocessing.shared_memory"
    "multiprocessing.dummy.connection"
    "logging.handlers"
    "logging.config"
    "config-3.8-x86_64-linux-gnu.python-config"
    "email.utils"
    "email.parser"
    "email.quoprimime"
    "email.generator"
    "email.policy"
    "email.charset"
    "email.feedparser"
    "email.iterators"
    "email.base64mime"
    "email.header"
    "email.contentmanager"
    "email.headerregistry"
    "email.encoders"
    "email.message"
    "email.errors"
    "email.mime.image"
    "email.mime.multipart"
    "email.mime.text"
    "email.mime.application"
    "email.mime.base"
    "email.mime.nonmultipart"
    "email.mime.audio"
    "email.mime.message"
    "tkinter.filedialog"
    "tkinter.messagebox"
    "tkinter.tix"
    "tkinter.font"
    "tkinter.dnd"
    "tkinter.commondialog"
    "tkinter.simpledialog"
    "tkinter.ttk"
    "tkinter.scrolledtext"
    "tkinter.constants"
    "tkinter.colorchooser"
    "tkinter.dialog"
    "tkinter.test.widget_tests"
    "tkinter.test.runtktests"
    "tkinter.test.support"
    "tkinter.test.test_tkinter.test_font"
    "tkinter.test.test_tkinter.test_loadtk"
    "tkinter.test.test_tkinter.test_colorchooser"
    "tkinter.test.test_tkinter.test_geometry_managers"
    "tkinter.test.test_tkinter.test_simpledialog"
    "tkinter.test.test_tkinter.test_widgets"
    "tkinter.test.test_tkinter.test_images"
    "tkinter.test.test_tkinter.test_text"
    "tkinter.test.test_tkinter.test_variables"
    "tkinter.test.test_tkinter.test_misc"
    "tkinter.test.test_ttk.test_functions"
    "tkinter.test.test_ttk.test_widgets"
    "tkinter.test.test_ttk.test_style"
    "tkinter.test.test_ttk.test_extensions"
    "json.tool"
    "json.decoder"
    "json.encoder"
    "json.scanner"
    "concurrent.futures.thread"
    "concurrent.futures.process"
    "idlelib.zoomheight"
    "idlelib.outwin"
    "idlelib.autoexpand"
    "idlelib.config_key"
    "idlelib.idle"
    "idlelib.searchbase"
    "idlelib.query"
    "idlelib.editor"
    "idlelib.multicall"
    "idlelib.codecontext"
    "idlelib.rpc"
    "idlelib.squeezer"
    "idlelib.configdialog"
    "idlelib.calltip"
    "idlelib.searchengine"
    "idlelib.help"
    "idlelib.calltip_w"
    "idlelib.parenmatch"
    "idlelib.tree"
    "idlelib.autocomplete_w"
    "idlelib.debugger"
    "idlelib.mainmenu"
    "idlelib.runscript"
    "idlelib.debugobj"
    "idlelib.pyshell"
    "idlelib.delegator"
    "idlelib.grep"
    "idlelib.history"
    "idlelib.debugger_r"
    "idlelib.hyperparser"
    "idlelib.help_about"
    "idlelib.filelist"
    "idlelib.config"
    "idlelib.undo"
    "idlelib.stackviewer"
    "idlelib.dynoption"
    "idlelib.iomenu"
    "idlelib.percolator"
    "idlelib.run"
    "idlelib.zzdummy"
    "idlelib.textview"
    "idlelib.scrolledlist"
    "idlelib.browser"
    "idlelib.redirector"
    "idlelib.pathbrowser"
    "idlelib.pyparse"
    "idlelib.replace"
    "idlelib.window"
    "idlelib.format"
    "idlelib.debugobj_r"
    "idlelib.statusbar"
    "idlelib.sidebar"
    "idlelib.search"
    "idlelib.tooltip"
    "idlelib.autocomplete"
    "idlelib.macosx"
    "idlelib.colorizer"
    "idlelib.idle_test.test_filelist"
    "idlelib.idle_test.test_browser"
    "idlelib.idle_test.test_percolator"
    "idlelib.idle_test.test_editmenu"
    "idlelib.idle_test.test_squeezer"
    "idlelib.idle_test.test_window"
    "idlelib.idle_test.test_pyparse"
    "idlelib.idle_test.test_sidebar"
    "idlelib.idle_test.test_redirector"
    "idlelib.idle_test.test_stackviewer"
    "idlelib.idle_test.test_delegator"
    "idlelib.idle_test.test_config_key"
    "idlelib.idle_test.test_calltip"
    "idlelib.idle_test.test_runscript"
    "idlelib.idle_test.mock_idle"
    "idlelib.idle_test.test_config"
    "idlelib.idle_test.test_debugger"
    "idlelib.idle_test.test_scrolledlist"
    "idlelib.idle_test.test_macosx"
    "idlelib.idle_test.test_debugobj"
    "idlelib.idle_test.test_textview"
    "idlelib.idle_test.test_help_about"
    "idlelib.idle_test.test_debugger_r"
    "idlelib.idle_test.test_codecontext"
    "idlelib.idle_test.test_query"
    "idlelib.idle_test.mock_tk"
    "idlelib.idle_test.test_undo"
    "idlelib.idle_test.test_format"
    "idlelib.idle_test.test_hyperparser"
    "idlelib.idle_test.template"
    "idlelib.idle_test.test_searchbase"
    "idlelib.idle_test.test_iomenu"
    "idlelib.idle_test.test_calltip_w"
    "idlelib.idle_test.test_run"
    "idlelib.idle_test.test_mainmenu"
    "idlelib.idle_test.test_history"
    "idlelib.idle_test.htest"
    "idlelib.idle_test.test_statusbar"
    "idlelib.idle_test.test_multicall"
    "idlelib.idle_test.test_searchengine"
    "idlelib.idle_test.test_pathbrowser"
    "idlelib.idle_test.test_pyshell"
    "idlelib.idle_test.test_zoomheight"
    "idlelib.idle_test.test_zzdummy"
    "idlelib.idle_test.test_debugobj_r"
    "idlelib.idle_test.test_grep"
    "idlelib.idle_test.test_editor"
    "idlelib.idle_test.test_search"
    "idlelib.idle_test.test_tooltip"
    "idlelib.idle_test.test_configdialog"
    "idlelib.idle_test.test_autocomplete_w"
    "idlelib.idle_test.test_help"
    "idlelib.idle_test.test_replace"
    "idlelib.idle_test.test_tree"
    "idlelib.idle_test.test_colorizer"
    "idlelib.idle_test.test_outwin"
    "idlelib.idle_test.test_rpc"
    "idlelib.idle_test.test_autocomplete"
    "idlelib.idle_test.test_text"
    "idlelib.idle_test.test_parenmatch"
    "idlelib.idle_test.test_autoexpand"
    "idlelib.idle_test.test_warning"
    "curses.textpad"
    "curses.panel"
    "curses.ascii"
    "curses.has_key"
    "asyncio.base_subprocess"
    "asyncio.runners"
    "asyncio.base_futures"
    "asyncio.selector_events"
    "asyncio.log"
    "asyncio.windows_utils"
    "asyncio.base_events"
    "asyncio.streams"
    "asyncio.queues"
    "asyncio.staggered"
    "asyncio.protocols"
    "asyncio.events"
    "asyncio.windows_events"
    "asyncio.futures"
    "asyncio.tasks"
    "asyncio.unix_events"
    "asyncio.format_helpers"
    "asyncio.coroutines"
    "asyncio.base_tasks"
    "asyncio.transports"
    "asyncio.constants"
    "asyncio.proactor_events"
    "asyncio.locks"
    "asyncio.trsock"
    "asyncio.exceptions"
    "asyncio.sslproto"
    "asyncio.subprocess"
    "sqlite3.dbapi2"
    "sqlite3.dump"
    "sqlite3.test.hooks"
    "sqlite3.test.dump"
    "sqlite3.test.userfunctions"
    "sqlite3.test.factory"
    "sqlite3.test.dbapi"
    "sqlite3.test.backup"
    "sqlite3.test.regression"
    "sqlite3.test.types"
    "sqlite3.test.transactions"
    "distutils.bcppcompiler"
    "distutils.extension"
    "distutils.file_util"
    "distutils.debug"
    "distutils.archive_util"
    "distutils.cygwinccompiler"
    "distutils.msvccompiler"
    "distutils.log"
    "distutils.spawn"
    "distutils.cmd"
    "distutils.sysconfig"
    "distutils.text_file"
    "distutils.fancy_getopt"
    "distutils.core"
    "distutils.version"
    "distutils.dep_util"
    "distutils.util"
    "distutils.ccompiler"
    "distutils.filelist"
    "distutils.config"
    "distutils.unixccompiler"
    "distutils.dir_util"
    "distutils.msvc9compiler"
    "distutils.versionpredicate"
    "distutils.dist"
    "distutils.errors"
    "distutils.tests.test_util"
    "distutils.tests.test_filelist"
    "distutils.tests.test_bdist_dumb"
    "distutils.tests.test_msvc9compiler"
    "distutils.tests.test_install_headers"
    "distutils.tests.test_build_scripts"
    "distutils.tests.test_bdist_rpm"
    "distutils.tests.test_unixccompiler"
    "distutils.tests.test_config_cmd"
    "distutils.tests.test_dir_util"
    "distutils.tests.test_cygwinccompiler"
    "distutils.tests.test_bdist_wininst"
    "distutils.tests.test_cmd"
    "distutils.tests.test_install"
    "distutils.tests.test_config"
    "distutils.tests.test_extension"
    "distutils.tests.test_sysconfig"
    "distutils.tests.test_install_lib"
    "distutils.tests.test_build_py"
    "distutils.tests.test_upload"
    "distutils.tests.test_check"
    "distutils.tests.test_dist"
    "distutils.tests.test_log"
    "distutils.tests.test_version"
    "distutils.tests.test_register"
    "distutils.tests.test_core"
    "distutils.tests.test_bdist"
    "distutils.tests.test_spawn"
    "distutils.tests.test_clean"
    "distutils.tests.test_sdist"
    "distutils.tests.test_archive_util"
    "distutils.tests.test_install_data"
    "distutils.tests.test_build"
    "distutils.tests.test_install_scripts"
    "distutils.tests.test_msvccompiler"
    "distutils.tests.support"
    "distutils.tests.test_bdist_msi"
    "distutils.tests.test_file_util"
    "distutils.tests.test_build_clib"
    "distutils.tests.test_dep_util"
    "distutils.tests.test_versionpredicate"
    "distutils.tests.test_build_ext"
    "distutils.tests.test_text_file"
    "distutils.command.install_lib"
    "distutils.command.build_clib"
    "distutils.command.build_scripts"
    "distutils.command.build_ext"
    "distutils.command.bdist_msi"
    "distutils.command.register"
    "distutils.command.install_scripts"
    "distutils.command.check"
    "distutils.command.sdist"
    "distutils.command.install_headers"
    "distutils.command.install_data"
    "distutils.command.clean"
    "distutils.command.bdist"
    "distutils.command.install"
    "distutils.command.build"
    "distutils.command.config"
    "distutils.command.bdist_wininst"
    "distutils.command.install_egg_info"
    "distutils.command.bdist_dumb"
    "distutils.command.bdist_rpm"
    "distutils.command.build_py"
    "distutils.command.upload"
    "dbm.gnu"
    "dbm.dumb"
    "dbm.ndbm"
    "importlib.resources"
    "importlib.util"
    "importlib.machinery"
    "importlib.metadata"
    "importlib.abc"
    "html.parser"
    "html.entities"
    "encodings.utf_16"
    "encodings.cp862"
    "encodings.utf_16_le"
    "encodings.bz2_codec"
    "encodings.latin_1"
    "encodings.iso8859_10"
    "encodings.cp856"
    "encodings.cp1252"
    "encodings.cp932"
    "encodings.cp1006"
    "encodings.palmos"
    "encodings.mac_cyrillic"
    "encodings.cp950"
    "encodings.cp1255"
    "encodings.mac_turkish"
    "encodings.aliases"
    "encodings.utf_32"
    "encodings.cp850"
    "encodings.utf_8_sig"
    "encodings.cp857"
    "encodings.uu_codec"
    "encodings.cp875"
    "encodings.iso8859_9"
    "encodings.iso8859_6"
    "encodings.cp855"
    "encodings.iso2022_kr"
    "encodings.cp1253"
    "encodings.euc_jisx0213"
    "encodings.big5"
    "encodings.cp037"
    "encodings.johab"
    "encodings.mac_iceland"
    "encodings.cp863"
    "encodings.tis_620"
    "encodings.ascii"
    "encodings.utf_7"
    "encodings.iso2022_jp"
    "encodings.zlib_codec"
    "encodings.ptcp154"
    "encodings.utf_8"
    "encodings.mac_arabic"
    "encodings.cp1257"
    "encodings.cp1254"
    "encodings.cp1250"
    "encodings.charmap"
    "encodings.cp852"
    "encodings.cp500"
    "encodings.iso8859_8"
    "encodings.kz1048"
    "encodings.cp869"
    "encodings.iso8859_16"
    "encodings.iso8859_11"
    "encodings.mac_romanian"
    "encodings.iso8859_1"
    "encodings.cp1251"
    "encodings.koi8_u"
    "encodings.cp1256"
    "encodings.rot_13"
    "encodings.cp949"
    "encodings.cp775"
    "encodings.iso2022_jp_ext"
    "encodings.punycode"
    "encodings.euc_jis_2004"
    "encodings.iso2022_jp_1"
    "encodings.mbcs"
    "encodings.gb18030"
    "encodings.cp865"
    "encodings.idna"
    "encodings.gbk"
    "encodings.iso8859_7"
    "encodings.euc_jp"
    "encodings.cp860"
    "encodings.mac_croatian"
    "encodings.mac_farsi"
    "encodings.mac_roman"
    "encodings.utf_32_be"
    "encodings.utf_16_be"
    "encodings.koi8_r"
    "encodings.iso8859_15"
    "encodings.iso8859_2"
    "encodings.euc_kr"
    "encodings.koi8_t"
    "encodings.iso2022_jp_2004"
    "encodings.undefined"
    "encodings.cp1026"
    "encodings.iso8859_13"
    "encodings.cp424"
    "encodings.cp1125"
    "encodings.cp437"
    "encodings.cp874"
    "encodings.mac_greek"
    "encodings.utf_32_le"
    "encodings.cp864"
    "encodings.cp720"
    "encodings.mac_centeuro"
    "encodings.cp737"
    "encodings.base64_codec"
    "encodings.unicode_escape"
    "encodings.shift_jisx0213"
    "encodings.iso8859_3"
    "encodings.iso2022_jp_3"
    "encodings.cp273"
    "encodings.cp1258"
    "encodings.gb2312"
    "encodings.hex_codec"
    "encodings.iso2022_jp_2"
    "encodings.cp866"
    "encodings.cp861"
    "encodings.cp858"
    "encodings.big5hkscs"
    "encodings.iso8859_5"
    "encodings.shift_jis_2004"
    "encodings.iso8859_14"
    "encodings.raw_unicode_escape"
    "encodings.hz"
    "encodings.hp_roman8"
    "encodings.quopri_codec"
    "encodings.shift_jis"
    "encodings.iso8859_4"
    "encodings.cp1140"
    "encodings.mac_latin2"
    "encodings.oem"
    "site-packages.sitecustomize"
    "urllib.request"
    "urllib.robotparser"
    "urllib.error"
    "urllib.response"
    "urllib.parse"
    "pydoc_data.topics"))

(with-eval-after-load 'python

  ;; TODO: only do this if typing is imported? or something
  ;; (setq-default flycheck-enabled-checkers '(flycheck-mypy))
  ;; (when (require 'flycheck-mypy nil 'noerror)
  ;;   (flycheck-add-next-checker 'python-flake8 'python-mypy t))

  (setq lsp-pyls-plugins-pyflakes-enabled nil)
  (setq lsp-pyls-plugins-pycodestyle-enabled nil)
  (defun my/set-flycheck-error-level ()
    (setq flycheck-navigation-minimum-level 'error)
    (setq flycheck-error-list-minimum-level 'error))
  (add-hook 'python-mode-hook 'my/set-flycheck-error-level)

  ;; TODO: Why doesn't this work?
  ;; (flycheck-select-checker 'python-pycompile)

  (custom-set-variables
   '(flycheck-python-flake8-executable "python3")
   '(flycheck-python-pycompile-executable "python3")
   '(flycheck-python-pylint-executable "python3"))

  (defun my/insert-print ()
    (interactive)
    (insert "print(\"~\"*40, _)"))

  (defun my/insert-python-stdlib-import ()
    (interactive)
    ;; TODO
    )

  (defun my/insert-python-stdlib-import-from ()
    (interactive)
    ;; TODO
    )

  (spacemacs/set-leader-keys-for-major-mode 'python-mode
    "ip" 'my/insert-print
    "iI" 'my/insert-python-stdlib-import
    "iF" 'my/insert-python-stdlib-import-from))

;; Jump to top-level definitions
;; (spacemacs/set-leader-keys-for-major-mode 'python-mode
;;   (completing-read prompt candidates nil t)
;;   "gt"  '(lambda () (interactive) (helm-ag-this-file)))
