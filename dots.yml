---
- hosts: localhost
  gather_facts: no
  #strategy: free

  vars:
    # username: "{% if ci %}travis{% else %}siddharthist{% endif %}"
    become: false
    minimal: "{{ lookup('env', 'MINIMAL') | bool }}"
    graphical: "{{ (true and not minimal) }}"
    ci: "{{ lookup('env', 'CI') | bool }}" # are we running in Travis?
    home_n: >
      {%- if ci  -%}
        {{ playbook_dir }}
      {%- else -%}
        {{ lookup('env', 'HOME') }}
      {%- endif -%}
    home: "{{ home_n | trim }}"
    xdg_config_home_n: >
      {%- if ci -%}
        {{ playbook_dir }}
      {%- else -%}
        {%- if lookup('env', 'XDG_CONFIG_HOME') -%}
          {{ lookup('env', 'XDG_CONFIG_HOME') }}
        {%- else -%}
          {{ home }}/.config
        {%- endif -%}
      {%- endif -%}
    xdg_config_home: "{{ xdg_config_home_n | trim }}"
    # Per-host configuration
    dpi: 92
    cursor_size: 32
    urxvt_font_size: 6
    # wallpaper: sarah-dorweiler-105888-unsplash.jpg

    symlinks:
      # - src: aspell-dict
      #   dst: "{{ home }}/.aspell.en.pws"
      - src: agignore
        dst: "{{ home }}/.agignore"
      - src: alacritty.yml
        dst: "{{ xdg_config_home }}/alacritty/alacritty.yml"
        graphical: true
      - src: beets.yml
        dst: "{{ xdg_config_home }}/beets/config.yaml"
      # - src: gtkrc-2.0
      #   dst: "{{ home }}/.gtkrc-2.0"
      #- src: gtkrc-3.0.ini
        #dst: "{{ xdg_config_home }}/gtk-3.0/settings.ini"
      - src: compton.conf
        dst: "{{ xdg_config_home }}/compton.conf"
        graphical: true
      - src: config.nix
        dst: "{{ xdg_config_home }}/nixpkgs/config.nix"
        minimal: true
      # status: can't figure out how to customize
      # - src: gdbinit
      #   dst: "{{ home }}/.gdbinit"
      #   minimal: true
      # - src: gdbinit.d
      #   dst: "{{ home }}/.gdbinit.d"
      #   minimal: true
      - src: git/gitconfig
        dst: "{{ home }}/.gitconfig"
        minimal: true
      - src: git/galois.gitconfig
        dst: "{{ xdg_config_home }}/git/galois.gitconfig"
      - src: git/gitignore
        dst: "{{ xdg_config_home }}/git/gitignore"
        minimal: true
      - src: git/pre-commit
        dst: "{{ home }}/.config/git/hooks/pre-commit"
      - src: home.nix
        dst: "{{ xdg_config_home }}/nixpkgs/home.nix"
        minimal: true
      - src: i3
        dst: "{{ xdg_config_home }}/i3/config"
        graphical: true
      - src: i3status.conf
        dst: "{{ xdg_config_home }}/i3status/config"
        graphical: true
      - src: keynavrc
        dst: "{{ xdg_config_home }}/keynav/keynavrc"
        graphical: true
      - src: library.blb
        dst: "{{ xdg_config_home }}/beets/library.blb"
      - src: latexmkrc
        dst: "{{ home }}/.latexmkrc"
      - src: matterhorn.ini
        dst: "{{ xdg_config_home }}/matterhorn/config.ini"
      - src: monitor/at-desk.sh
        dst: "{{ xdg_config_home }}/i3/scripts/at-desk.sh"
        mode: "0750"
        graphical: true
      - src: monitor/not-at-desk.sh
        dst: "{{ xdg_config_home }}/i3/scripts/not-at-desk.sh"
        mode: "0750"
        graphical: true
      - src: mutt
        dst: "{{ home }}/.mutt"
        mode: "0750"
      - src: emacs/local
        dst: "{{ home }}/.emacs.d/private/local"
        mode: "0750"
        minimal: true
      - src: emacs/org-roam
        dst: "{{ home }}/.emacs.d/private/org-roam"
        mode: "0750"
        minimal: true
      - src: emacs/outshine
        dst: "{{ home }}/.emacs.d/private/outshine"
        mode: "0750"
        minimal: true
      - src: emacs/snippets
        dst: "{{ home }}/.emacs.d/private/snippets"
        mode: "0750"
        minimal: true
      - src: deps/eww-layer
        dst: "{{ home }}/.emacs.d/private/eww"
        mode: "0750"
        minimal: true
        outside: yes
      - src: eshell-aliases
        dst: "{{ home }}/.emacs.d/eshell/alias"
      - src: offlineimaprc
        dst: "{{ home }}/.offlineimaprc"
      - src: pet/config.toml
        dst: "{{ xdg_config_home }}/pet/config.toml"
      - src: pet/snippet.toml
        dst: "{{ xdg_config_home }}/pet/snippet.toml"
      - src: polybar.ini
        dst: "{{ xdg_config_home }}/polybar/config"
      # Currently breaks GNOME on Fedora
      # - src: profile
      #   dst: "{{ home }}/.profile"
      #   mode: "0775"
      - src: qutebrowser/config.py
        dst: "{{ xdg_config_home }}/qutebrowser/config.py"
        graphical: true
      - src: qutebrowser/config.yaml
        dst: "{{ xdg_config_home }}/qutebrowser/config.yaml"
        graphical: true
      - src: qutebrowser/quickmarks
        dst: "{{ xdg_config_home }}/qutebrowser/quickmarks"
        graphical: true
      - src: ranger/commands.py
        dst: "{{ xdg_config_home }}/ranger/commands.py"
        minimal: true
      - src: ranger/rc.conf
        dst: "{{ xdg_config_home }}/ranger/rc.conf"
        minimal: true
      - src: ranger/scope.sh
        dst: "{{ xdg_config_home }}/ranger/scope.sh"
        mode: "0750"
        minimal: true
      - src: rofi.rasi
        dst: "{{ xdg_config_home }}/rofi/config.rasi"
        graphical: true
      - src: spacemacs
        dst: "{{ home }}/.spacemacs"
        minimal: true
      - src: spacemacs.desktop
        dst: "{{ home }}/.local/share/applications/spacemacs.desktop"
        graphical: true
      - src: ssh
        dst: "{{ home }}/.ssh/config"
      - src: sway
        dst: "{{ xdg_config_home }}/sway/config"
        graphical: true
      - src: sxhkdrc
        dst: "{{ xdg_config_home }}/sxhkd/sxhkdrc"
        graphical: true
      - src: tmux.conf
        dst: "{{ home }}/.tmux.conf"
      # - src: "unsplash/{{ wallpaper }}"
      #   dst: "{{ xdg_config_home }}/wallpaper.jpg"
      #   graphical: true
      - src: urlview
        dst: "{{ home }}/.urlview"
      - src: xmodmap
        dst: "{{ home }}/.xmodmap"
        graphical: true
      - src: Xresources
        dst: "{{ home }}/.Xresources"
      - src: zsh.d
        dst: "{{ home }}/.zsh.d"
        mode: "0750"
        minimal: true

  tasks:
    - name: collect facts
      setup:
        gather_subset:
          - '!all'

    - assert: { that: "ansible_os_family == 'NixOS' or minimal" }

    - name: configure nixos
      become: yes
      register: nixos
      file:
        follow: true
        state: link
        src: "{{ playbook_dir }}/nixos"
        path: /etc/nixos
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: "0640"
      when: "(become | bool) and (not ci) and (ansible_distribution == 'NixOS')"

    - name: make user symlink dirs
      file:
        follow: true
        state: directory
        path: "{{ item.dst | dirname }}"
        owner: "{{ item.owner | default(username) }}"
        group: "{{ item.group | default(username) }}"
        mode: "{{ item.mode | default('0775') }}"
      when: >
        item.src != False
        and (not (item.graphical | default(False)) or (item.graphical and graphical))
        and ((item.minimal | default(False)) or ((item.minimal | default(False)) == minimal))
      with_items: "{{ symlinks }}"

    - name: make user symlinks
      file:
        follow: true
        state: link
        src: >-
          {%- if (item.outside | default(False)) -%}
            {{ playbook_dir }}/{{ item.src }}
          {%- else -%}
            {{ playbook_dir }}/files/{{ item.src }}
          {%- endif -%}
        path: "{{ item.dst }}"
        owner: "{{ item.owner | default(username) }}"
        group: "{{ item.group | default(username) }}"
        mode: "{{ item.mode | default('0640') }}"
        force: "{{ item.force | default(False) }}"
      when: >
        item.src != False
        and (not (item.graphical | default(False)) or (item.graphical and graphical))
        and ((item.minimal | default(False)) or ((item.minimal | default(False)) == minimal))
      with_items: "{{ symlinks }}"

    - name: clone qutebrowser dracula theme
      git:
        repo: 'https://github.com/dracula/qutebrowser-dracula-theme'
        dest: "{{ xdg_config_home }}/qutebrowser/dracula"
        clone: yes
        update: no
      when: "graphical"

    - name: clone spacemacs
      git:
        repo: 'https://github.com/syl20bnr/spacemacs'
        dest: "{{ home }}/.emacs.d"
        clone: yes
        update: no
      when: "not minimal"

    - name: Download LLVM mode
      get_url:
        url: https://raw.githubusercontent.com/llvm-mirror/llvm/master/utils/emacs/llvm-mode.el
        dest: "{{ home }}/.emacs.d/private/local/llvm-mode.el"
        mode: '0640'

    - name: handle xrdb changes
      command: xrdb -merge $HOME/.Xresources
      when: "not ci and graphical"

    # - name: set new background
    #   command: "feh --bg-scale {{ xdg_config_home }}/wallpaper.png"

    - name: install packages
      command: nix-env -if nixos/minimal.nix
      when: "ansible_distribution != 'NixOS'"
